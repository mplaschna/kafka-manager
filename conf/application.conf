
# Copyright 2015 Yahoo Inc. Licensed under the Apache License, Version 2.0
# See accompanying LICENSE file.

# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="changeme"
application.secret=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# global=Global

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=INFO

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=INFO

kafka-manager.zkhosts="localhost:2181"
kafka-manager.zkhosts=${?ZK_HOSTS}
pinned-dispatcher.type="PinnedDispatcher"
pinned-dispatcher.executor="thread-pool-executor"
application.features=["KMClusterManagerFeature","KMTopicManagerFeature","KMPreferredReplicaElectionFeature","KMReassignPartitionsFeature"]


# determines if the OAUTH2 mechanism should be enabled (e.g. for testing)
oauth2.enabled = true

# callback to which the user is redirected by the authentication server
oauth2.callback.url = "https://localhost:9443/oauth-callback"
oauth2.callback.url = ${?CALLBACK_URL}

# access token endpoint
oauth2.access.token.url = "https://auth.zalando.com/oauth2/access_token?realm=employees"

# authorization server endpoint
oauth2.authorization.url = "https://auth.zalando.com/z/oauth2/authorize"

# token info endpoint
oauth2.token.info.url = "https://auth.zalando.com/oauth2/tokeninfo"

# file containing the OAUTH2 credentials
oauth2.credentials.filePath= "/meta/credentials/client.json"

# timout in ms for the requests against OAUTH infrastructure
oauth2.request.timeout = 5000

# specifies the expiry time boundary in seconds after which the OAUTH2 mechanism should try to reresh the access token
oauth2.token.refresh.expiry.limit = 300

# time in seconds after which the credentials cache should expire automatically
oauth2.credentials.cache.expiry.time = 300

# additional server paths excluded from the OAUTH2 validation
oauth2.excluded.paths = ["/webjars", "/assets"]

# additional service paths for OAUTH2 validation
oauth2.service.paths = ["/services"]

play.http.filters = "filters.Filters"

play.crypto.secret="changeme"
play.crypto.secret=${?APPLICATION_SECRET}